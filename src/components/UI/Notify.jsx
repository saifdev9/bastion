import React, { useRef,useEffect,useState } from 'react'
import { useDispatch } from 'react-redux';
import { NavLink,Link } from 'react-router-dom';
import { notifyActions } from '../../Store/NotifySlice';




export function NotifyItems(props) {
   const [clear, setClear] = useState(false)
   const divRef = useRef(null)
   const dispatch = useDispatch(); 

   const clearHandler = () => {
      setClear(true)
      setTimeout(()=>{
         console.log("yo")
         dispatch(notifyActions.touchHandler())
      },1000)
   }

   return (
       <div onClick={(e)=> e.stopPropagation()} ref={divRef} className={`absolute flex flex-col gap-3 border-2 border-gray-100 bg-white  -bottom-30 right-8 p-2 rounded-md translate-y-1/2 w-97 h-fit origin-top `}> 

         <div className="text-sm flex justify-between border-b-2 border-gray-300 items-center pb-2">
            <p>Notifications</p>
            <NavLink to="/dashboard/settings/notifications" className={"w-7 h-7"}>
               <svg  viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.0175 19C10.6601 19 10.3552 18.7347 10.297 18.373C10.2434 18.0804 10.038 17.8413 9.76171 17.75C9.53658 17.6707 9.31645 17.5772 9.10261 17.47C8.84815 17.3365 8.54289 17.3565 8.30701 17.522C8.02156 17.7325 7.62943 17.6999 7.38076 17.445L6.41356 16.453C6.15326 16.186 6.11944 15.7651 6.33361 15.458C6.49878 15.2105 6.52257 14.8914 6.39601 14.621C6.31262 14.4332 6.23906 14.2409 6.17566 14.045C6.08485 13.7363 5.8342 13.5051 5.52533 13.445C5.15287 13.384 4.8779 13.0559 4.87501 12.669V11.428C4.87303 10.9821 5.18705 10.6007 5.61601 10.528C5.94143 10.4645 6.21316 10.2359 6.33751 9.921C6.37456 9.83233 6.41356 9.74433 6.45451 9.657C6.61989 9.33044 6.59705 8.93711 6.39503 8.633C6.1424 8.27288 6.18119 7.77809 6.48668 7.464L7.19746 6.735C7.54802 6.37532 8.1009 6.32877 8.50396 6.625L8.52638 6.641C8.82735 6.84876 9.21033 6.88639 9.54428 6.741C9.90155 6.60911 10.1649 6.29424 10.2375 5.912L10.2473 5.878C10.3275 5.37197 10.7536 5.00021 11.2535 5H12.1115C12.6248 4.99976 13.0629 5.38057 13.1469 5.9L13.1625 5.97C13.2314 6.33617 13.4811 6.63922 13.8216 6.77C14.1498 6.91447 14.5272 6.87674 14.822 6.67L14.8707 6.634C15.2842 6.32834 15.8528 6.37535 16.2133 6.745L16.8675 7.417C17.1954 7.75516 17.2366 8.28693 16.965 8.674C16.7522 8.99752 16.7251 9.41325 16.8938 9.763L16.9358 9.863C17.0724 10.2045 17.3681 10.452 17.7216 10.521C18.1837 10.5983 18.5235 11.0069 18.525 11.487V12.6C18.5249 13.0234 18.2263 13.3846 17.8191 13.454C17.4842 13.5199 17.2114 13.7686 17.1083 14.102C17.0628 14.2353 17.0121 14.3687 16.9562 14.502C16.8261 14.795 16.855 15.1364 17.0323 15.402C17.2662 15.7358 17.2299 16.1943 16.9465 16.485L16.0388 17.417C15.7792 17.6832 15.3698 17.7175 15.0716 17.498C14.8226 17.3235 14.5001 17.3043 14.2331 17.448C14.0428 17.5447 13.8475 17.6305 13.6481 17.705C13.3692 17.8037 13.1636 18.0485 13.1099 18.346C13.053 18.7203 12.7401 18.9972 12.3708 19H11.0175Z" stroke="#000000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M13.9747 12C13.9747 13.2885 12.9563 14.333 11.7 14.333C10.4437 14.333 9.42533 13.2885 9.42533 12C9.42533 10.7115 10.4437 9.66699 11.7 9.66699C12.9563 9.66699 13.9747 10.7115 13.9747 12Z" stroke="#000000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
            </NavLink>
         </div>

         
         {!clear && props.items.map((el,i) => {

            if(i<=3) {
               return (
                     
                  <SmallItems key={i+1}/>
                
               )
            }
         })}

         <div onClick={()=> dispatch(cartActions.touchHandler())}  className={` flex justify-center items-center text-sm  bg-red-60  `}>
            <NavLink onClick={()=> dispatch(notifyActions.touchHandler())} to="/dashboard/settings/notifications" className='text-black hover:underline  text-sm font-bold w-20 p-1 justify-self-center rounded-full text-center bg-red-60 '>see all</NavLink>
            <span onClick={clearHandler} className='text-white hover:cursor-pointer   text-sm font-bold w-20 p-1 justify-self-center rounded-full text-center bg-red-600 '>clear</span>
         </div>

      </div>
   )
}


export const SmallItems = (props) => {
   const itemRef = useRef(null);
   const [clicked,setClicked] = useState(false)

   const dispatch = useDispatch();
   


   const onClickhandler = (e) => {
      console.log(clicked, "click")
      setClicked(prev => !prev)
      
   }


   return (
      <div  key={props.key} ref={itemRef}  className={`flex p-1 border-b-2 border-dashed border-gray-100 gap-4 text-sm items-center ${props.className}`}>
           <figure  onClick={onClickhandler} className={`w-8 self-start hover:cursor-pointer brightness-0 rounded-full p-1 hover:brightness-100 hover:bg-red-100 ${clicked && "bg-red-100 brightness-100" }`}>
               <svg className={` hover:-rotate-45 hover:scale-125" ${ clicked && "-rotate-45 scale-110"}  transition-all`} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M3.36557 16.2946L2.63053 16.4436L2.63053 16.4436L3.36557 16.2946ZM4.47985 17.9181L4.08119 18.5533C4.09133 18.5597 4.10162 18.5658 4.11205 18.5717L4.47985 17.9181ZM6.40328 18.099L6.64382 18.8094L6.64382 18.8094L6.40328 18.099ZM1.49538 13.0061L1.10676 13.6475L1.11215 13.6508L1.49538 13.0061ZM0.986725 12.232L1.72883 12.1235L1.72883 12.1235L0.986725 12.232ZM1.25163 11.3391L1.81203 11.8375L1.81484 11.8343L1.25163 11.3391ZM5.39343 6.62905L4.83064 6.1333L4.83021 6.13378L5.39343 6.62905ZM5.50848 6.51705L5.98876 7.09309L5.98916 7.09276L5.50848 6.51705ZM11.2961 5.76605L10.913 6.41086L10.9173 6.41338L11.2961 5.76605ZM10.1056 18.1231L9.72237 18.7678L9.72661 18.7702L10.1056 18.1231ZM10.951 18.212L10.7137 17.5005L10.7137 17.5005L10.951 18.212ZM16.2228 18.8875L16.449 18.1724L16.449 18.1724L16.2228 18.8875ZM18.6676 18.2134L19.2246 18.7157L19.2246 18.7157L18.6676 18.2134ZM12.0517 17.6181L11.8511 16.8954L11.8502 16.8956L12.0517 17.6181ZM21.6535 14.9661L21.8541 15.6887L21.8601 15.687L21.6535 14.9661ZM22.3392 14.3533L21.6486 14.0608L21.6486 14.0608L22.3392 14.3533ZM22.3077 13.4211L21.6364 13.7554L21.6386 13.7598L22.3077 13.4211ZM19.491 7.76605L18.8196 8.10032L18.8196 8.10044L19.491 7.76605ZM19.4081 7.62705L20.0213 7.1952L20.021 7.19484L19.4081 7.62705ZM14.0066 5.36005L14.1841 6.08874C14.1915 6.08695 14.1988 6.08504 14.2061 6.08303L14.0066 5.36005ZM13.5581 11.2991L14.299 11.4154L14.2993 11.4134L13.5581 11.2991ZM13.521 11.4571L12.8056 11.2318L12.8053 11.233L13.521 11.4571ZM11.6285 17.5041L12.3437 17.7299L12.3443 17.7281L11.6285 17.5041ZM3.1373 13.9267C2.63559 14.6604 2.45358 15.5709 2.63053 16.4436L4.10062 16.1455C4.00355 15.6668 4.10443 15.1698 4.3755 14.7734L3.1373 13.9267ZM2.63053 16.4436C2.80755 17.3167 3.32982 18.0818 4.08119 18.5533L4.87851 17.2828C4.48189 17.0339 4.19761 16.6239 4.10062 16.1455L2.63053 16.4436ZM4.11205 18.5717C4.88576 19.007 5.80353 19.0939 6.64382 18.8094L6.16274 17.3886C5.72732 17.536 5.25175 17.4918 4.84765 17.2644L4.11205 18.5717ZM6.64382 18.8094C7.48339 18.5251 8.16354 17.8982 8.52789 17.086L7.15931 16.4721C6.96211 16.9116 6.59888 17.2409 6.16274 17.3886L6.64382 18.8094ZM4.13962 13.7054L1.8786 12.3614L1.11215 13.6508L3.37318 14.9948L4.13962 13.7054ZM1.88398 12.3646C1.80494 12.3167 1.74442 12.2301 1.72883 12.1235L0.244616 12.3406C0.323606 12.8808 0.636768 13.3628 1.10678 13.6475L1.88398 12.3646ZM1.72883 12.1235C1.7132 12.0166 1.74623 11.9115 1.81202 11.8375L0.691233 10.8406C0.32726 11.2498 0.165677 11.8007 0.244616 12.3406L1.72883 12.1235ZM1.81484 11.8343L5.95664 7.12432L4.83021 6.13378L0.688412 10.8438L1.81484 11.8343ZM5.95621 7.12481C5.96641 7.11323 5.9773 7.10265 5.98876 7.09309L5.02819 5.94101C4.95747 5.99997 4.89144 6.06427 4.83064 6.1333L5.95621 7.12481ZM5.98916 7.09276C7.0182 6.23358 7.83999 5.85133 8.56762 5.76806C9.28206 5.6863 10.0195 5.88004 10.913 6.41085L11.6791 5.12126C10.6099 4.48606 9.54172 4.1468 8.39708 4.27779C7.26563 4.40727 6.17495 4.98353 5.02779 5.94134L5.98916 7.09276ZM10.9173 6.41338C11.1587 6.55463 11.3904 6.71296 11.6108 6.88726L12.5414 5.71085C12.2664 5.49328 11.9768 5.29542 11.6748 5.11872L10.9173 6.41338ZM3.3733 14.9948L7.46148 17.4238L8.22767 16.1343L4.1395 13.7053L3.3733 14.9948ZM7.46135 17.4238L9.72238 18.7678L10.4888 17.4784L8.2278 16.1344L7.46135 17.4238ZM9.72661 18.7702C10.1693 19.0295 10.7009 19.086 11.1883 18.9234L10.7137 17.5005C10.6383 17.5257 10.5559 17.5176 10.4846 17.4759L9.72661 18.7702ZM11.1883 18.9234C11.675 18.7611 12.0655 18.3982 12.2704 17.9316L10.897 17.3285C10.8588 17.4154 10.7899 17.4751 10.7137 17.5005L11.1883 18.9234ZM13.8308 17.0259C14.0058 18.2295 14.841 19.237 15.9966 19.6026L16.449 18.1724C15.8576 17.9853 15.4099 17.4612 15.3153 16.8102L13.8308 17.0259ZM15.9966 19.6026C17.1545 19.9689 18.41 19.619 19.2246 18.7157L18.1106 17.7112C17.6838 18.1845 17.0381 18.3588 16.449 18.1724L15.9966 19.6026ZM19.2246 18.7157C20.0366 17.8152 20.2693 16.5234 19.8318 15.3908L18.4325 15.9313C18.6684 16.5419 18.5399 17.2351 18.1106 17.7112L19.2246 18.7157ZM14.3724 16.1954L11.8511 16.8954L12.2523 18.3407L14.7737 17.6407L14.3724 16.1954ZM11.8502 16.8956C11.8116 16.9064 11.7714 16.9078 11.7324 16.8999L11.435 18.3702C11.7064 18.4251 11.9866 18.4148 12.2532 18.3405L11.8502 16.8956ZM14.7724 17.6461L19.3315 16.3891L18.9328 14.943L14.3737 16.2L14.7724 17.6461ZM19.3328 16.3887L21.8541 15.6887L21.4529 14.2434L18.9315 14.9434L19.3328 16.3887ZM21.8601 15.687C22.3897 15.5353 22.8166 15.1493 23.0298 14.6457L21.6486 14.0608C21.608 14.1567 21.5311 14.221 21.4469 14.2451L21.8601 15.687ZM23.0298 14.6457C23.2427 14.143 23.2236 13.5696 22.9769 13.0823L21.6386 13.7598C21.6855 13.8526 21.6895 13.9641 21.6486 14.0608L23.0298 14.6457ZM22.9791 13.0867L20.1623 7.43166L18.8196 8.10044L21.6364 13.7554L22.9791 13.0867ZM20.1623 7.43178C20.1214 7.3495 20.0742 7.2704 20.0213 7.1952L18.7949 8.0589C18.804 8.07188 18.8123 8.08572 18.8196 8.10032L20.1623 7.43178ZM20.021 7.19484C19.1548 5.96637 18.2484 5.12153 17.191 4.69602C16.1198 4.26499 15.0021 4.3073 13.8071 4.63707L14.2061 6.08303C15.1999 5.8088 15.9601 5.81762 16.631 6.08758C17.3156 6.36307 18.0156 6.95374 18.7951 8.05926L20.021 7.19484ZM13.829 4.63137C13.0233 4.82769 12.2678 5.19489 11.6112 5.70817L12.5351 6.88993C13.0252 6.50677 13.5871 6.2342 14.1841 6.08874L13.829 4.63137ZM11.6048 6.88482C12.1901 7.35281 12.5582 7.87205 12.7548 8.51768C12.9566 9.18023 12.9947 10.032 12.8168 11.1847L14.2993 11.4134C14.4968 10.1331 14.4803 9.03488 14.1897 8.08068C13.894 7.10955 13.332 6.3453 12.5415 5.71328L11.6048 6.88482ZM12.8172 11.1827C12.8145 11.1994 12.8107 11.2159 12.8056 11.2318L14.2364 11.6823C14.2639 11.595 14.2848 11.5058 14.299 11.4154L12.8172 11.1827ZM12.8053 11.233L10.9128 17.28L12.3443 17.7281L14.2368 11.6811L12.8053 11.233ZM10.9134 17.2782C10.9088 17.2926 10.9035 17.3067 10.8974 17.3203L12.2661 17.9338C12.2959 17.8674 12.3218 17.7993 12.3437 17.7299L10.9134 17.2782Z" fill="red"></path> </g></svg>  
           </figure> 

           <p onClick={onClickhandler} className={` ${!clicked && " truncate"} hover:cursor-pointer bg-red-90 w-5/6 transition-all `}>{props.notification || "Why are short stories important ? Short stories provide historical, social, and literary context. Short stories are just as effective as novels at providing important historical and social context. To really delve into a culture, turn to their stories. Pairing short stories with a history unit is a superb idea"}</p>
           
      </div>
   )
}



